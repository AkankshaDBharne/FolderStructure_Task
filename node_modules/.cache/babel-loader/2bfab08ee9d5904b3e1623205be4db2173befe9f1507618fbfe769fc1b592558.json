{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task_Akanksha Bharne\\\\frontend_task\\\\section-b\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport FolderStructure from './FolderStructure';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = [{\n  Documents: ['Document1.jpg', 'Document2.jpg', 'Document3.jpg'],\n  Desktop: ['Screenshot1.jpg', 'videopal.mp4'],\n  Downloads: [{\n    Drivers: ['Printerdriver.dmg', 'cameradriver.dmg']\n  }, 'chromedriver.dmg'],\n  Applications: ['Webstorm.dmg', 'Pycharm.dmg', 'FileZila.dmg', 'Mattermost.dmg']\n}];\nfunction App() {\n  _s();\n  const [data, setData] = useState(initialData);\n  const handleAddFile = (fileName, folderName) => {\n    // Create a copy of the data to avoid directly modifying the state\n    const newData = [...data];\n\n    // Find the folder by name in the data\n    const folder = newData.find(folder => folder[folderName]);\n    if (folder) {\n      // Add the new file to the folder\n      folder[folderName].push(fileName);\n\n      // Update the state with the new data\n      setData(newData);\n    }\n  };\n  const handleAddFolder = (folderName, parentFolder) => {\n    // Create a copy of the data to avoid directly modifying the state\n    const newData = [...data];\n\n    // Find the parent folder by name in the data\n    const parent = newData.find(folder => folder[parentFolder]);\n    if (parent) {\n      // Add the new folder with an empty array for contents\n      parent[parentFolder].push({\n        [folderName]: []\n      });\n\n      // Update the state with the new data\n      setData(newData);\n    }\n  };\n  const handleDelete = itemName => {\n    // Create a copy of the data to avoid directly modifying the state\n    const newData = [...data];\n\n    // Find the item to delete\n    const findAndDelete = arr => {\n      for (let i = 0; i < arr.length; i++) {\n        if (typeof arr[i] === 'object') {\n          const key = Object.keys(arr[i])[0];\n          if (key === itemName) {\n            // Remove the item from the array\n            arr.splice(i, 1);\n            return;\n          } else {\n            findAndDelete(arr[i][key]);\n          }\n        } else if (arr[i] === itemName) {\n          // Remove the item from the array\n          arr.splice(i, 1);\n          return;\n        }\n      }\n    };\n\n    // Iterate through the data and delete the item\n    newData.forEach(folder => {\n      findAndDelete(folder);\n    });\n\n    // Update the state with the new data\n    setData(newData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(FolderStructure, {\n      data: data,\n      onAddFile: handleAddFile,\n      onAddFolder: handleAddFolder,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hDGcfQHkZj5ZsEBk8saO8jx9VfY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FolderStructure","jsxDEV","_jsxDEV","initialData","Documents","Desktop","Downloads","Drivers","Applications","App","_s","data","setData","handleAddFile","fileName","folderName","newData","folder","find","push","handleAddFolder","parentFolder","parent","handleDelete","itemName","findAndDelete","arr","i","length","key","Object","keys","splice","forEach","className","children","onAddFile","onAddFolder","onDelete","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Task_Akanksha Bharne/frontend_task/section-b/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport FolderStructure from './FolderStructure';\n\nconst initialData = [\n  {\n    Documents: ['Document1.jpg', 'Document2.jpg', 'Document3.jpg'],\n    Desktop: ['Screenshot1.jpg', 'videopal.mp4'],\n    Downloads: [\n      {\n        Drivers: ['Printerdriver.dmg', 'cameradriver.dmg'],\n      },\n      'chromedriver.dmg',\n    ],\n    Applications: ['Webstorm.dmg', 'Pycharm.dmg', 'FileZila.dmg', 'Mattermost.dmg'],\n  },\n];\n\nfunction App() {\n  const [data, setData] = useState(initialData);\n\n  const handleAddFile = (fileName, folderName) => {\n    // Create a copy of the data to avoid directly modifying the state\n    const newData = [...data];\n\n    // Find the folder by name in the data\n    const folder = newData.find((folder) => folder[folderName]);\n\n    if (folder) {\n      // Add the new file to the folder\n      folder[folderName].push(fileName);\n\n      // Update the state with the new data\n      setData(newData);\n    }\n  };\n\n  const handleAddFolder = (folderName, parentFolder) => {\n    // Create a copy of the data to avoid directly modifying the state\n    const newData = [...data];\n\n    // Find the parent folder by name in the data\n    const parent = newData.find((folder) => folder[parentFolder]);\n\n    if (parent) {\n      // Add the new folder with an empty array for contents\n      parent[parentFolder].push({ [folderName]: [] });\n\n      // Update the state with the new data\n      setData(newData);\n    }\n  };\n\n  const handleDelete = (itemName) => {\n    // Create a copy of the data to avoid directly modifying the state\n    const newData = [...data];\n\n    // Find the item to delete\n    const findAndDelete = (arr) => {\n      for (let i = 0; i < arr.length; i++) {\n        if (typeof arr[i] === 'object') {\n          const key = Object.keys(arr[i])[0];\n          if (key === itemName) {\n            // Remove the item from the array\n            arr.splice(i, 1);\n            return;\n          } else {\n            findAndDelete(arr[i][key]);\n          }\n        } else if (arr[i] === itemName) {\n          // Remove the item from the array\n          arr.splice(i, 1);\n          return;\n        }\n      }\n    };\n\n    // Iterate through the data and delete the item\n    newData.forEach((folder) => {\n      findAndDelete(folder);\n    });\n\n    // Update the state with the new data\n    setData(newData);\n  };\n\n  return (\n    <div className=\"App\">\n      <FolderStructure\n        data={data}\n        onAddFile={handleAddFile}\n        onAddFolder={handleAddFolder}\n        onDelete={handleDelete}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}